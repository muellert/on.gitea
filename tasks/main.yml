---

- include: create-directories.yaml
  tags:
      - gitea_infra

# install a database server if required:
- include: install-postgres.yaml
  when: gitea_db_type == 'postgres'
  tags:
      - gitea_infra

- include: install-mariadb.yaml
  when: "{{ gitea_db_type == 'mariadb' }}"
  tags:
      - gitea_infra


- name: install prerequisite software
  apt:
      name: git
      state: present
  tags:
      - gitea_infra

- name: create a suitable group
  group:
      name: "{{ gitea_group }}"
      gid: "{{ gitea_gid }}"
      state: present
  tags:
      - serviceuser
      - gitea_infra

- name: make sure the path to the home dir exists
  file:
    dest: "{{ gitea_install_path | dirname }}"
    mode: 0755
    state: directory
    recurse: yes
  tags:
      - gitea_infra

- name: create a suitable user
  user:
      name: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
      shell: /bin/bash
      generate_ssh_key: yes
      ssh_key_bits: 4096
      uid: "{{ gitea_uid }}"
      home: "{{ gitea_install_path | dirname }}"
      state: present
  tags:
      - serviceuser
      - gitea_infra

- name: create an app directory structure inside the user home
  file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
      mode: 0700
  with_items:
      - "{{ gitea_install_path | dirname }}"
      - "{{ gitea_install_path }}/custom/conf"
      - "{{ gitea_install_path }}/data"
      - "{{ gitea_install_path }}/../log"
      - "{{ gitea_install_path }}/indexers"
  tags:
      - gitea_infra

- name: create a directory for the repositories
  file:
      dest: "{{ gitea_repo_root }}"
      state: directory
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
      mode: 0700
  tags:
      - gitea_infra

- name: copy the gpg key to the target
  copy:
    src: gitea.key
    dest: /var/tmp/gitea.key

- name: import the key into the keyring
  command: gpg --import /var/tmp/gitea.key

- name: download the binary to the target machine
  include: get-binary.yml
  when: gitea_download
  tags:
    - download

- name: get a random string
  command: /usr/bin/makepasswd --chars 30  # noqa 301
  register: gitea_secret_key
  become: false
  delegate_to: localhost
  tags:
      - service
      - serviceuser

- name: set the secret key
  set_fact:
      gitea_secret: "{{ gitea_secret_key.stdout | default('test run') }}"
  tags: service

- name: where to store the service file
  file:
      name: /usr/local/lib/systemd/system
      state: directory

- name: copy the service file
  template:
      src: templates/gitea.service.j2
      dest: /usr/local/lib/systemd/system/gitea.service
  notify:
      - reload systemd
      - restart gitea
  tags: service

- meta: flush_handlers
  tags: service

# make it work (mainly) on localhost:
- name: allow unsecure cookies if the protocol is http
  set_fact:
    gitea_session_cookie_secure: false
  when: gitea_http_protocol == 'http'
  tags: service

- name: copy the config file (backup copy)
  template:
      src: templates/app.ini.j2
      dest: "/tmp/app.ini"
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
  debugger: on_failed
  tags: service

- name: copy the config file
  template:
      src: templates/app.ini.j2
      dest: "{{ gitea_install_path }}/custom/conf/app.ini"
      backup: true
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
  notify:
      - restart gitea
  tags: service

- meta: flush_handlers
  tags: service
- debug: msg="handlers flushed"
  tags: service

- name: create a gitea admin user
  command: "{{ gitea_install_path }}/{{ gitea_binary }} admin create-user --name {{ gitea_admin_username }} --password {{ gitea_admin_password | quote }} --email {{ gitea_admin_email  }} --admin"  # noqa 204 301
  become: true
  become_user: "{{ gitea_user }}"
  ignore_errors: yes
  tags: service

- name: enable the service
  service:
      name: gitea
      enabled: yes
  tags: service

- name: enable the gitea service
  systemd:
      name: gitea
      enabled: yes
      daemon_reload: yes
  notify:
      - reload systemd
      - restart gitea
  tags: service
