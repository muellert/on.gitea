
---

- name: install prerequisite software
  apt:
      name: git
      state: present

- name: create a suitable group
  group:
      name: "{{ gitea_group }}"
      gid: "{{ gitea_gid }}"
      state: present
  tags: serviceuser

- name: create a suitable user
  user:
      name: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
      shell: /bin/bash
      generate_ssh_key: yes
      uid: "{{ gitea_uid }}"
      home: "{{ gitea_install_path | dirname }}"
      state: present
  tags: serviceuser

- name: create an app directory structure inside the user's home
  file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
      mode: 0700
  with_items:
      - "{{ gitea_install_path | dirname }}"
      - "{{ gitea_install_path }}/custom/conf"
      - "{{ gitea_install_path }}/data"
      - "{{ gitea_install_path }}/../log"
      - "{{ gitea_install_path }}/indexers"
  tags: files

- name: create a directory for the repositories
  file:
      dest: "{{ gitea_repo_root }}"
      state: directory
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
  tags: files

- name: download the binary to the target machine
  include: get-binary.yml
  when: gitea_download
  tags: files

- name: download the binary to the controller machine
  include: copy-binary.yml
  when: not gitea_download
  tags: files

- name: create a file to signal success
  file:
      path: "{{ gitea_install_path }}/{{ gitea_version }}.stamp"
      state: touch
      mode: 0644
  tags: files

- name: get a random string
  local_action: command /usr/bin/makepasswd --chars 30
  register: gitea_secret_key
  tags: serviceuser
  become: false
  tags: service

- name: set the secret key
  set_fact:
      gitea_secret: "{{ gitea_secret_key.stdout | default('test run')}}"
  tags: service

- debug: var=gitea_secret

- name: where to store the service file
  file:
      name: /usr/local/lib/systemd/system
      state: directory

- name: copy the service file
  template:
      src: templates/gitea.service.j2
      dest: /usr/local/lib/systemd/system/gitea.service
  notify:
      - reload systemd
      - restart gitea
  tags: service

- name: copy the config file
  template:
      src: templates/app.ini.j2
      dest: "{{ gitea_install_path }}/custom/conf/app.ini"
      backup: true
      owner: "{{ gitea_user }}"
      group: "{{ gitea_group }}"
  notify:
      - restart gitea
  tags: service

- meta: flush_handlers
  tags: service
- debug: msg="handlers flushed"
  tags: service

- name: create an admin user
  command: "{{ gitea_install_path }}/{{ gitea_binary }} admin create-user --name {{ gitea_admin_username }} --password {{ gitea_admin_password | quote }} --email {{ gitea_admin_email  }} --admin"
  become: true
  become_user: "{{ gitea_user }}"
  ignore_errors: yes
  tags: service

- name: enable the service
  service:
      name: gitea
      enabled: yes
  tags: service

- name: enable the gitea service
  systemd:
      name: gitea
      enabled: yes
      daemon_reload: yes
  notify:
      - reload systemd
      - restart gitea
  tags: service

